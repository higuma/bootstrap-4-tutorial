extends ../template-cdn-en
include ../mixins-en

block head
  title Bootstrap 4 tutorial: Getting started

block body
  div.container
    +pageHeader("getting-started-1")
      p.lead Getting started (1): 
        a(href="#intro") Startup
        |  / 
        a(href="#download") Download
        |  / 
        a(href="#contents") Contents
        |  / 
        a(href="#browsers-devices") Browsers
        |  / 
        a(href="#javascript") JavaScript

    h2.mt-4#intro
      +extLink("https://getbootstrap.com/docs/4.2/getting-started/introduction/") Startup with CDN
    p.my-2 The easiest way to start up with Bootstrap 4 is using 
      +extLink("https://en.wikipedia.org/wiki/Content_delivery_network") CDN
      | . This tutorial is also made throughout with CDN.
    ul
      li Can be used directly with HTML only
      li No download, no extra tools needed
    p.my-2 The structure of the starter template is shown as follows. ⇒ 
      +collapseButton("#intro-structure") Structure
    ul.struct.collapse#intro-structure
      li
        a(href="#intro-doctype") DOCTYPE declaration 
        code= "<!DOCTYPE html>"
      li
        code html
        +attrBtn(".a1-1")
        ul
          li.att.collapse.a1-1 Attribute (
            a(href="#intro-lang") language code
            | ) 
            code lang="{language-code}"
          li
            code head
            ul
              li
                a(href="#intro-encoding") Character encoding 
                code meta
                +attrBtn(".a1-2")
                ul.collapse.a1-2
                  li.att Attribute 
                    code charset="utf-8"
              li
                a(href="#intro-viewport") Setting viewport 
                code meta
                +attrsBtn(".a1-3")
                ul.collapse.a1-3
                  li.att Attribute 
                    code name="viewport"
                  li.att Attribute 
                    code content="width=device-width, initial-scale=1, shrink-to-fit=no"
              li
                a(href="#intro-bootstrap-css") Loading Bootstrap CSS 
                code link
                +attrsBtn(".a1-4")
                ul.collapse.a1-4
                  li.att Attribute 
                    code rel="stylesheet"
                  li.att Attribute 
                    code href="{URL of Bootstrap CSS CDN}"
                  li.att Attribute 
                    code integrity="sha384-{SHA-384 string}"
                  li.att Attribute 
                    code crossorigin="anonymous"
              li Title 
                code title
                ul
                  li.txt Text 
                    code {page-title}
              li (Optional) 
                code style
                |  , etc.
          li
            code body
            ul
              li (Document content here ...)
              each lib in [[1,"jQuery"], [2,"Popper.js"], [3,"Bootstrap JavaScript"]]
                - let cls = `a1-5-${lib[0]}`
                li
                  a(href="#intro-javascript") Loading JavaScript
                  = ` (${lib[1]}) `
                  code script
                  +attrsBtn(`.${cls}`)
                  ul(class=`collapse ${cls}`)
                    li.att Attribute 
                      code=`src="{URL of ${lib[1]} CDN}"`
                    li.att Attribute 
                      code integrity="sha384-{SHA-384 string}"
                    li.att Attribute 
                      code crossorigin="anonymous"
    h4.mt-4#intro-doctype DOCTYPE declaration
    p.my-2 HTML documents must start with 
      code= "<!DOCTYPE html>"
      | .  It is required for backward compatibility to indicate it is a HTML 5.X document. ⇒ 
      +collapseButton("#intro-doctype-reference") Reference
      |  
      +collapseButton("#intro-doctype-note") Note
    ul.collapse#intro-doctype-reference
      li
        +extLink("https://developer.mozilla.org/en-US/docs/Glossary/Doctype") MDN - DOCTYPE
      li
        +extLink("https://www.w3.org/TR/html52/syntax.html#the-doctype") W3C - HTML5.2 - DOCTYPE
      li If you are interested in history, see 
        +extLink("https://en.wikipedia.org/wiki/Document_type_declaration") Wikipedia - Document type declaration
    div.alert.alert-info.collapse#intro-doctype-note(role="alert")
      code DOCTYPE
      |  is usually written in uppercase. It is required for older HTML's (XHTML, HTML4, etc.), influenced by their ancestor 
      +extLink("https://en.wikipedia.org/wiki/Standard_Generalized_Markup_Language") SGML
      | . But it is now case-insensitive (since HTML5.0, see 
      +extLink("https://www.w3.org/TR/html52/syntax.html#the-doctype") W3C reference
      | ). Bootstrap 
      +extLink("https://getbootstrap.com/docs/4.2/getting-started/introduction/#starter-template") starter template
      |  uses lowercase 
      code= `<!doctype html>`
      | . It is valid but still rare.
    h4.mt-4#intro-lang Language code
    p.my-2 Set the main language of the page with the attribute 
      code lang="{language code}"
      |  to the root element 
      code html
      | . Use one of two-letter codes in 
      +extLink("https://en.wikipedia.org/wiki/ISO_639-1") ISO 639-1
      |  (i.e. 
      code lang="en"
      |  for English). ⇒ 
      +collapseButton("#intro-lang-reference") Reference
      ul.mt-3.collapse#intro-lang-reference
        li
          +extLink("https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html") MDN reference - html
          |  (⇒ 
          +extLink("https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/lang") Global attribute 
            code lang
          | )
        li
          +extLink("https://www.w3.org/TR/html52/dom.html#the-lang-and-xmllang-attributes") W3C - HTML5.2 - The lang and xml:lang attributes
        li
          +extLink("https://tools.ietf.org/html/bcp47") BCP 47 - Tags for Identifying Languages
          |  (complete specification for current language code)
        li
          +extLink("https://en.wikipedia.org/wiki/IETF_language_tag") Wikipedia - IETF language tag
          |  (article for BCP 47)
        li
          +extLink("https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes") Wikipedia - List of ISO 639-1 codes
          |  - usually, ISO 639-1 two-letter codes are used
    h4.mt-4.mb-3#intro-encoding Character encoding
    p.my-2
      +extLink("https://en.wikipedia.org/wiki/UTF-8") UTF-8
      |  must be used for the character encoding. ⇒ 
      +collapseButton("#intro-encoding-summary") Summary
      |  
      +collapseButton("#intro-encoding-reference") Reference
    ul.mt-3.collapse#intro-encoding-summary
      li Always choose 
        +extLink("https://en.wikipedia.org/wiki/UTF-8") UTF-8
        |  for a HTML file character encoding
      li Use a 
        code meta
        |  tag
        ul
          li Set an attribute 
            code charset="utf-8"
            ul
              li Case-insensitive: 
                code "UTF-8"
                |  and 
                code "Utf-8"
                |  are also valid
          li Must be written within 1024 bytes from the file-head
    ul.mt-3.collapse#intro-encoding-reference
      li
        +extLink("https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta#Attributes") MDN Reference - meta
        |  (see 
        code charset
        | )
      li
        +extLink("https://www.w3.org/TR/html52/document-metadata.html#specifying-the-documents-character-encoding") W3C - HTML5.2 - Specifying the document's character encoding
      li
        +extLink("https://www.w3.org/International/questions/qa-choosing-encodings") W3C - Choosing & applying a character encoding
        |  (article - see 
        +extLink("https://www.w3.org/International/questions/qa-choosing-encodings#useunicode") Why use UTF-8?
        | )
    h4.mt-4#intro-viewport Setting viewport
    p.my-2 Viewport setting are required for mobile devices. ⇒ 
      +collapseButton("#intro-viewport-reference") Reference
      |  
      +collapseButton("#intro-viewport-note") Note
      |  
      +collapseButton("#intro-viewport-ios9") About iOS 9
    ul.collapse#intro-viewport-reference
      li
        +extLink("https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta#Attributes") MDN reference - meta
        |  (see 
        code viewport
        | )
      li
        +extLink("https://www.w3.org/TR/css-device-adapt-1/#viewport-meta") W3C Working draft - CSS Device Adaptation Module Level 1 - Viewport &lt;meta&gt; element
    div.alert.alert-info.collapse#intro-viewport-note(role="alert")
      p
        strong Note (May 2018): 
        | Setting a viewport using a 
        code meta
        |  tag with 
        code name="viewport" content="..."
        |  was first implemented by Safari. As other mobile divices followed later, it has become a de-facto standard.
      p The original iPhone/Safari syntax uses 
        code meta
        |  only. But the working draft has been made as a part of CSS. Most present mobile browsers support 
        code meta
        |  but only a few browsers support its CSS implementation (see 
        +extLink("https://caniuse.com/#search=%40viewport") caniuse - @viewport
        |  and 
        +extLink("https://developer.mozilla.org/en-US/docs/Web/CSS/Reference/@viewport") MDN - @viewport
        |  for CSS support).
      p.mb-0 The working draft has a 
        +extLink("https://www.w3.org/TR/css-device-adapt-1/#parsing-algorithm") mapping rule
        |  between 
        code content
        |  value (delimited by comma 
        code ,
        |  ) and CSS 
        code @viewport
        |  (delemited by semicolon 
        code ;
        | ). 
    div.alert.alert-warning.collapse#intro-viewport-ios9(role="alert")
      strong Note for iOS9: 
      code shrink-to-fit=no
      |  is a iPhone iOS 9 (Safari 9)-only setting. Without this, it ignores 
      code initial-scale=1
      |  to fit (shrink) to the viewport (as Safari 9 default). See 
      +extLink("https://developer.apple.com/library/content/releasenotes/General/WhatsNewInSafari/Articles/Safari_9_0.html") What's New in Safari - 9.0
      | . It is not written in W3C editor's draft as Safari 10 removed this feature. Other browsers just ignore it.
    h4.mt-4#intro-cdn Loading from CDN
    p Set attributes 
      code integrity="sha384-{SHA-384 string}"
      |  and 
      code crossorigin="anonymous"
      |  to loader tags (
      code link
      |  for CSS, 
      code script
      |  for JavaScript) on using CDN. ⇒ 
      +collapseButton("#intro-cdn-reference") Reference
      |  
      +collapseButton("#intro-cdn-note") Note
    ul.collapse#intro-cdn-reference
      li
        code integrity
        ul
          li
            +extLink("https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity") MDN - Subresource Integrity
          li
            +extLink("https://w3c.github.io/webappsec-subresource-integrity/") W3C - Subresource Integrity
      li
        code crossorigin
        ul
          li
            +extLink("https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes") MDN - CORS settings attributes
          li
            +extLink("https://html.spec.whatwg.org/multipage/urls-and-fetching.html#cors-settings-attributes") WHATWG - CORS settings attributes
    div.alert.alert-info.collapse#intro-cdn-note(role="alert")
      p SHA-384 is one of 
        +extLink("https://en.wikipedia.org/wiki/SHA-2") SHA-2
        |  
        +extLink("https://en.wikipedia.org/wiki/Cryptographic_hash_function") Cryptographic hash function
        |  family, and is regarded to have enough cryptographic strength for current Web applications. It is used to have CDN verify a fingerprint (
        +extLink("https://en.wikipedia.org/wiki/Base64") Base64
        |  string of SHA-384) of data.
      p.mb-0 You can copy and paste fingerprint strings from Bootstrap 
        +extLink("https://getbootstrap.com/docs/4.2/getting-started/introduction/#starter-template") starter template
        | . You can also calculate strings by yourself using terminal command-line (see 
        +extLink("https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity/#Tools_for_generating_SRI_hashes")
          em Tools for generating SRI hashes
        |  of 
        +extLink("https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity") MDN - Subresource Integrity
        |  for detail).
    h5.mt-4#intro-bootstrap-css Loading Bootstrap CSS
    p Load the 
      +extLink("https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css") CSS file
      |  from 
      +extLink("https://www.bootstrapcdn.com/") BootstrapCDN
      | . See 
      +extLink("https://getbootstrap.com/docs/4.2/getting-started/introduction/#starter-template") starter template
      |  for actual attributes. ⇒ 
      +collapseButton("#intro-bootstrap-css-note") Note
    div.alert.alert-info.collapse#intro-bootstrap-css-note(role="alert")
      strong Note: 
      | CDN host of Bootstrap has been changing several times (formaly used NetDNA or MaxCDN). Current CDN is 
      +extLink("https://www.bootstrapcdn.com/") BootstrapCDN
      |  (powered by 
      +extLink("https://www.stackpath.com/") StackPath
      | ). You can also use previous versions of Bootstrap (see 
      +extLink("https://www.bootstrapcdn.com/legacy/bootstrap/") Bootstrap Legacy
      | ).
    h5.mt-4#intro-javascript Loading JavaScript
    p Bootstrap is mostly a CSS library. But some dynamic features are implemented with JavaScript. It depends on 
      +extLink("http://jquery.com/") jQuery
      |  and is (historically) called "(Bootstrap) JavaScript plugin" as it is written as a jQuery plugin. Bootstrap (&ge;v4.0) also depends on 
      +extLink("https://popper.js.org/") Popper.js
      | .
    p Both of them must be loaded before Bootstrap JavaScript plugin. Usually, JavaScript libraries are loaded in the following order. But you can exchange 1 and 2 as jQuery and Popper.js are independent. See 
      +extLink("https://getbootstrap.com/docs/4.2/getting-started/introduction/#starter-template") starter template
      |  for actual attributes.
    ol
      li jQuery - 1.9.1 or above (see package.json), Slim build (without AJAX, Effects) can be used
      li Popper.js
      li Bootstrap JavaScript
    div.alert.alert-info(role="alert") Using CDN is the fastest way for startup. But you may want to optimize a website (or a web application) with customizing Bootstrap CSS and/or JavaScript. Contents below are mostly about costomizing Bootstrap. You can skip to 
      a(href="getting-started-2.html/#accessibility") Accessibility
      |  if you are not interested in customization.

    h2.mt-5#download
      +extLink("https://getbootstrap.com/docs/4.2/getting-started/download/") Download
    p.my-2 You can get and use Bootstrap in various ways. 
    ul
      li Downloading procompiled files ⇒ 
        +extLink("https://getbootstrap.com/docs/4.2/getting-started/download/#compiled-css-and-js") Compiled CSS and JS
        |  (see 
        a(href="#contents-precompiled") Precompiled bootstrap
        | )
      li Getting source code ⇒ 
        +extLink("https://getbootstrap.com/docs/4.2/getting-started/download/#source-files") Source files
        |  (see 
        a(href="#contents-source-code") Bootstrap source code
        | )
      li Using CDN ⇒ see 
        a(href="#intro") Startup with CDN
      li Using a package manager for each environment ⇒ 
        +extLink("https://getbootstrap.com/docs/4.2/getting-started/download/#package-managers") Package managers
        ul
          li JavaScript(node.js)
            ul
              li ⇒ 
                +extLink("https://getbootstrap.com/docs/4.2/getting-started/download/#npm") npm
                |  (Bootstrap itself uses npm as a buid tool ⇒ see 
                a(href="getting-started-2.html/#build") Building Bootstrap
                | )
              li ⇒ 
                +extLink("https://getbootstrap.com/docs/4.2/getting-started/download/#yarn") yarn
          li Ruby ⇒ 
            +extLink("https://getbootstrap.com/docs/4.2/getting-started/download/#rubygems") RubyGems
          li PHP ⇒ 
            +extLink("https://getbootstrap.com/docs/4.2/getting-started/download/#composer") Composer
          li .NET ⇒ 
            +extLink("https://getbootstrap.com/docs/4.2/getting-started/download/#composer") NuGet
    div.alert.alert-info(role="alert")
      +extLink("https://github.com/twbs/bootstrap") Bootstrap repositry
      |  is published in GitHub. You can get full source code of all versions from 
      +extLink("https://github.com/twbs/bootstrap/releases") Releases
      |  page. You can also build Bootstrap distribution files (CSS, JavaScript, and documentation) from source code (see 
      a(href="getting-started-2.html/#build") Building Bootstrap
      |  for detail).

    h2.mt-5#contents
      +extLink("https://getbootstrap.com/docs/4.2/getting-started/contents/") Contents
    h4.ht-4#contents-precompiled
      +extLink("https://getbootstrap.com/docs/4.2/getting-started/contents/#precompiled-bootstrap") Precompiled bootstrap
    p.my-2 (
      code .map
      |  files are omitted)
    ul
      li
        code bootstrap/
        +filesBtn(".pre")
        ul.collapse.pre
          li
            code css/
            +filesBtn(".pre-css")
            ul.collapse.pre-css
              li
                code bootstrap(.min).css
                |  - Full version
              li
                code bootstrap-grid-(.min).css
                |  - 
                a(href="layout-1.html#grid") Grid system
                |  and 
                a(href="utilities-3.html#flex") Flex utilities
                |  only
              li
                code bootstrap-reboot-(.min).css
                |  - 
                a(href="content-1.html#reboot") Reboot (reset CSS)
                |  only
          li
            code js/
            +filesBtn(".pre-js")
            ul.collapse.pre-js
              li
                code bootstrap.bundle(.min).js
                |  - Popper.js and Bootstrap JS (jQuery requied as prerequisites)
              li
                code bootstrap(.min).js
                |  - Bootstrap JS only (jQuery and Popper.js requied as prerequisites)
    h4.mt-4#contents-source-code
      +extLink("https://getbootstrap.com/docs/4.2/getting-started/contents/#bootstrap-source-code") Bootstrap source code
    p.my-2 (Partial items only)
    ul
      li
        code bootstrap-4.X.X/
        +filesBtn(".src")
        ul.collapse.src
          li
            code assets/
            |  - CSS, JavaScript, and image files for documentation
          li
            code build/
            |  - Script files and settings for building Bootstrap
          li
            code dist/
            |  - Precompiled files (same as 
            a(href="#contents-precompiled") Precompiled Bootstrap
            | )
          li
            code docs/
            |  - Documentation source files (Markdown)
          li
            code js/
            |  JavaScript files
            +filesBtn(".src-js")
            ul.collapse.src-js
              li
                code dist/
                |  - JavaScript module files (CommonJS and AMD) processed by 
                +extLink("https://babeljs.io/") Babel
                |  and 
                +extLink("https://rollupjs.org/") Rollup.js
              li
                code src/
                |  - JavaScript module source files (ES2015)
              li
                code tests/
                |  - Files for tests
          li
            code nuget/
            |  - Files for NuGet (pacage manager for .NET)
          li
            code scss/
            |  Sass (.scss) source files
          li
            code package.json
    div#javascript-modules-button
      +collapseButton("#javascript-modules") About JavaScript modules
    div.alert.alert-info.collapse.mt-3#javascript-modules(role="alert") 
      p.my-2 In current JavaScript programming, three major mojule specifications exist as follows.
      ul.my-2
        li ES2015(ES6) (Newest, used by Bootstrap 4)
        li CommonJS (
          +extLink("https://nodejs.org/ja/") node.js
          | , etc.)
        li AMD (
          +extLink("https://requirejs.org/") require.js
          | , etc.)
      p.my-2 Bootstrap JavaScript modular sources are written in ES2015. They can be combined with other ES2015 modules (e.g. unbundled modular sources of 
        +extLink("https://popper.js.org/") Popper.js
        | ).
      p.my-2 CommonJS and AMD are also supported from version 4.1.3. Modular source files in 
        code bootstrap-4.X.X/js/dist/
        |  are processed output by 
        +extLink("https://rollupjs.org/") rollup.js
        |  to UMD (Universal Module Definition - a file format which supports both CommonJS and AMD). UMD files processed by rollup.js also support loading directly from browsers with 
        code= '<script>'
        |  tags.

    h2.mt-5#browsers-devices
      +extLink("https://getbootstrap.com/docs/4.2/getting-started/browsers-devices/") Browsers and devices
    p.my-2 Bootstrap 4 supports major browsers and platforms. Supported browsers are described in 
      +extLink("https://github.com/twbs/bootstrap/blob/v4.1.3/.browserslistrc")
        code .browserslistrc
      |  (
      +extLink("https://github.com/twbs/bootstrap/blob/v4.1.2/package.json")
        code package.json
      |  until v4.1.2) by 
      +extLink("https://github.com/browserslist/browserslist") browserslist
      |  format (see 
      +extLink("https://github.com/browserslist/browserslist#best-practices") Best Practices
      |  and 
      +extLink("https://github.com/browserslist/browserslist#full-list") Full List
      |  for the query syntax). ⇒ 
      +collapseButton("#browserslist") Show entry
    pre.mt-3.p-2.border.bg-light.collapse#browserslist
      code
        = `# https://github.com/browserslist/browserslist#readme\n`
        = `\n`
        = `>= 1%\n`
        = `last 1 major version\n`
        = `not dead\n`
        = `Chrome >= 45\n`
        = `Firefox >= 38\n`
        = `Edge >= 12\n`
        = `Explorer >= 10\n`
        = `iOS >= 9\n`
        = `Safari >= 9\n`
        = `Android >= 4.4\n`
        = `Opera >= 30\n`
    p.my-2 It is referenced by 
      +extLink("https://github.com/postcss/autoprefixer") Autoprefixer
      |  to process CSS with adding vendor prefixes. Autoprefixer is a required tool for customizing Bootstrap CSS (&ge; ver. 3.2, see 
      a(href="css") Customizing CSS
      |  for detail).
    p.my-2 See the official pages for actual supports as below links.
    ul
      li ⇒ 
        +extLink("https://getbootstrap.com/docs/4.2/getting-started/browsers-devices/#mobile-devices") Mobile devices
      li ⇒ 
        +extLink("https://getbootstrap.com/docs/4.2/getting-started/browsers-devices/#desktop-browsers") Desktop browsers

    h2.mt-5#javascript
      +extLink("https://getbootstrap.com/docs/4.2/getting-started/javascript/") JavaScript
    p.my-2 Bootstrap has JavaScript API for implementing dynamic behaiviors. They are is called "(Bootstrap) JavasScript plugins" as they are made as jQuery plugins. See 
      a(href="#intro-javascript") Loading JavaScript
      |  for the basic startup settings.
    p.my-2 Their original (unbundled) source files are written as ES2015(ES6) modules. You can also make use of JavaScript API's as modules. See 
      a(href="#contents-source-code") Bootstrap source code
      |  (press 
      a.btn.btn-outline-info.btn-sm(href="#javascript-modules-button") About JavaScript modules
      |  button to show detail).
    p.my-2 Bootstrap JavaScript plugins implicitly perform initialization processes on startup on load as default (usually you do not have to write any code). However, following components need explicit initializations (see code examples at target links).
    ul
      li
        a(href="components-11.html/#popovers") Popovers
      li
        a(href="components-12.html/#toasts") Toasts
      li
        a(href="components-12.html/#tooltips") Tooltips
    h4.mt-3#javascript-data-attributes
      +extLink("https://getbootstrap.com/docs/4.2/getting-started/javascript/#data-attributes") Data attributes
    p.my-2 Bootstrap JavaScript plugins use 
      +extLink("https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/data-*") custom data attributes (
        code data-*
        | )
      |  for setting options. You can write HTML attributes which begin with 
      code data-
      |  (e.g. 
      code data-collapse
      | ) to set various API options without any additional JavaScript code.
    h4.mt-3#javascript-data-attributes
      +extLink("https://getbootstrap.com/docs/4.2/getting-started/javascript/#programmatic-api") Programmatic API
    p.my-2 Bootstrap JavaScript API is made as a collection of jQuery plugins. You first select elements with jQuery, and invoke methods from elements. The code below is example invocations of 
      a(href="components-8.html/#modal") Modals
      | . See available options for 
      +extLink("https://getbootstrap.com/docs/4.2/components/modal/#options") Options
      | , also see methods (command strings) for 
      +extLink("https://getbootstrap.com/docs/4.2/components/modal/#methods") Methods
      | .
    pre.mt-3.p-2.border.bg-light
      code
        | // Example 1: Creates an interface object with defaults (normally not required)
        | $('#my-modal').modal();
        | 
        | // Example 2: Sets an option (same as setting an attribute as data-keyboard="false")
        | // (see "Options" of the official document)
        | $('#my-modal').modal({ keyboard: false });
        | 
        | // Example 3: Executes a command
        | // (see "Methods" of the official document)
        | $('#my-modal').modal('show');
    h4.mt-3#javascript-events
      +extLink("https://getbootstrap.com/docs/4.2/getting-started/javascript/#events") Events
    p.my-2 Bootstrap JavaScript plugins provide custom events for their specific actions. Event names are provided with the jQuery event namespace (dot-separated). See the naming convention as follows.
    ul
      li
        code {event}.bs.{component}
        |  (e.g. 
        code show.bs.modal
        | )
        ul
          li
            code {event}
            |  - Event name (e.g. 
            code show
            |  )
          li
            code bs
            |  - First namespace - Specifies it is a part of Bootstrap API
          li
            code {component}
            |  - Second namespace - A component name as a jQuery plugin (e.g. 
            code modal
            |  )
    p.my-2 The code below is an example of setting an event handler to a 
      a(href="components-8.html/#modal") Modal
      |  component. See 
      +extLink("https://getbootstrap.com/docs/4.2/components/modal/#events") Events
      |  for the whole listing of available events.
    pre.mt-3.p-2.border.bg-light
      code
        | // Event "show.bs.modal" fires when the method $().modal('show') is invoked.
        | $('#my-modal').on('show.bs.modal', function(event) {
        |   // The modal is going to show but is not shown yet.
        |   // You can use here to change modal contents to display.
        | });
    p.my-2 Also see the live demo example of 
      a(href="components-8.html/#varying-modal-content") Varying modal content
      |  (working JavaScript code and detailed comments are available).
    h4.mt-3#javascript-jquery-plugin As jQuery plugins
    h5.mt-2#javascript-no-conflict
      +extLink("https://getbootstrap.com/docs/4.2/getting-started/javascript/#no-conflict") No conflict
    p.my-2 Bootstrap JavaScript plugins are registered to 
      code $.fn
      |  (jQuery prototype object). All Bootstrap plugins are 
      code ($.fn.)alert
      | , 
      code button
      | , 
      code carousel
      | , 
      code collapse
      | , 
      code dropdown
      | , 
      code modal
      | , 
      code popover
      | , 
      code scrollspy
      | , 
      code tab
      | , 
      code toast
      | , and 
      code tooltip
      | . As they they are registered as plain lowercase names, they may conflict to other jQuery plugins. You can use 
      code .noConflict()
      |  to resolve conflicts.
    pre.mt-3.p-2.border.bg-light
      code
        | // Restores (the original) $.fn.button and gets Bootstrap button plugin object.
        | var bootstrapButton = $.fn.button.noConflict();
        | // Re-registor as a safe different name (bootstrapBtn)
        | $.fn.bootstrapBtn = bootstrapButton;
        | // You can call button API as $(SELECTOR).bootstrapBtn(ARGUMENTS)
    h5.mt-2#javascript-default-settings
      +extLink("https://getbootstrap.com/docs/4.2/getting-started/javascript/#default-settings") Default settings
    p.my-2 Default settings of each plugins are set to 
      code $.fn.{module-name}.Constructor.Default
      |  objects. You can change API defaults as follows.
    pre.mt-3.p-2.border.bg-light
      code
        | // Example: Changes the default setting of keyboard operation to OFF.
        | $.fn.modal.Constructor.Default.keyboard = false;

    +breadcrumbLevel1("Getting started (1): Startup/Download/Contents/Browsers/JavaScript")
