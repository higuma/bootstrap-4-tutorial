extends ../template-cdn-ja
include ../mixins-ja

mixin toastContent(header, text)
  div.toast-header
    img.rounded.mr-2(src="../img/20x20-blue.svg" alt="Logo placeholder")
    strong.mr-auto Bootstrap
    small.muted= header
    button.ml-2.mb-1.close(type="button" data-dismiss="toast" aria-label="Close")
      span(aria-hidden="true") &times;
  div.toast-body= text

mixin stdToastContent
  +toastContent("11 mins ago", "Hello, world! This is a toast message.")

mixin toast1
  div.toast(role="alert" aria-live="assertive" aria-atomic="true" data-autohide="false")
    +stdToastContent

mixin toast2
    each msg in [["just now","See? Just like this."], ["2 seconds ago","Heads up, toasts will stack automatically."]]
      div.toast(role="alert" aria-live="assertive" aria-atomic="true" data-autohide="false")
        +toastContent(msg[0], msg[1])

block head
  title Bootstrap 4 tutorial: コンポーネント(12): スクロールスパイ / スピナー / トースト / ツールチップ

block body
  - const contexts = ["primary", "secondary", "success", "danger", "warning", "info", "light", "dark"];

  div.container
    +pageHeader("components-12")
      p.lead コンポーネント(12): 
        a(href="#scrollspy") スクロールスパイ
        |  / 
        a(href="#spinners") スピナー
        |  / 
        a(href="#toasts") トースト
        |  / 
        a(href="#tooltips") ツールチップ

    h2.mt-5#scrollspy
      +extLink("https://getbootstrap.com/docs/4.2/components/scrollspy/") スクロールスパイ
    p.my-2 インジケータコンポーネント( 
      a(href="components-9.html") ナビゲーション
      |  または 
      a(href="components-7.html") リストグループ
      |  )のアクティブアイテム表示と縦スクロールするコンテンツのスクロールを同期させる機能。
    h4.mt-3#scrollspy-how-it-works
      +extLink("https://getbootstrap.com/docs/4.2/components/scrollspy/#how-it-works") 仕組み
    p.my-2 スクロールスパイはJavaScriptを用いてスクロールするコンテンツの現在位置を監視し、インジケータ(ナビゲーションまたはリストグループ)のアクティブ表示を更新する。機能上の必要条件は次の通り。
    ul
      li インジケータコンポーネントとして
        a(href="components-9.html") ナビゲーション
        | または
        a(href="components-7.html") リストグループ
        | を用いる
      li スクロールするコンテンツの基点要素には次の3条件が必要
        ul
          li
            code position: relative;
          li
            code overflow-y: scroll;
          li
            code height
            |  が何らかの形で設定されていること
      li 基点要素として 
        code body
        |  を用いる場合は上記条件は自動的に満たしている(設定不要)
    h4#scrollspy-how-to-use-it 使用法
    ul
      li スクロール検出の基点要素として 
        code body
        |  を用いるか、または上記必要条件の属性を設定する
      li 基点要素に次の属性を設定する
        ul
          li
            code data-spy="scroll"
          li
            code= `data-target="#{indicator-id}"`
          li (オプション) 
            code data-offset="{pixels}"
            |  (スクロール位置計算オフセット、デフォルトは 
            code "10"
            |  )
      li スクロールコンテンツ内のターゲット要素に適宜 
        code id
        |  を設定する
      li インジケータコンポーネントとして次のどちらかを用いる
        ul
          li
            a(href="components-9.html") ナビゲーション
          li
            a(href="components-7.html") リストグループ
      li インジケータコンポーネントに 
        code id="{indicator-id}"
        |  を設定する
      li アイテムの内部にリンク 
            code a
            |  と属性 
            code= `href="#{target-id}"`
            |  を設定する
    h4.mt-3#scrollspy-example-in-navbar
      +extLink("https://getbootstrap.com/docs/4.2/components/scrollspy/#example-in-navbar") ナビゲーションバーへの設定
    p ⇒ 
      a(href="scrollspy-1.html") デモページ
    h4.mt-4#scrollspy-example-with-nested-nav
      +extLink("https://getbootstrap.com/docs/4.2/components/scrollspy/#example-with-nested-nav") 階層ナビゲーションへの設定
    p ⇒ 
      a(href="scrollspy-2.html") デモページ
    h4.mt-4#scrollspy-example-with-list-group
      +extLink("https://getbootstrap.com/docs/4.2/components/scrollspy/#example-with-list-group") リストグループへの設定
    p ⇒ 
      a(href="scrollspy-3.html") デモページ

    h2.mt-5#spinners
      +extLink("https://getbootstrap.com/docs/4.2/components/spinners/") スピナー
    p スピナーは主に「ロード中」状態を表示するのに用いられる。
    h4.mt-3#spinners-border-spinner
      +extLink("https://getbootstrap.com/docs/4.2/components/spinners/#border-spinner") ボーダースピナー
    div.spinner-border(role="status")
      span.sr-only(Loading...)
    div.my-3
      +collapseButton("#spinner-border-structure") 構造
    ul.struct.mt-3.collapse#spinner-border-structure
      li ボーダースピナー
        code div.spinner-border
        +attrBtn(".a1-1")
        ul
          li.att.collapse.a1-1 アクセシビリティ属性 
            code role="status"
          li スクリーンリーダ用 
            code span.sr-only
            ul
              li.txt Text 
                code Loading...
    h5.mt-3#spinners-colors
      +extLink("https://getbootstrap.com/docs/4.2/components/spinners/#colors") 色の設定
    p.my-2
      code= `.text-(${contexts.join('|')})`
      |  を追加する。
    div.row
      each c in contexts
        div.col-lg-2.col-md-3.col-sm-4.flex-column
          div
            code= `.text-${c}`
          div(class=`spinner-border text-${c}` role="status")
            span.sr-only(Loading...)
    h4.mt-4#spinners-growing-spinner
      +extLink("https://getbootstrap.com/docs/4.2/components/spinners/#growing-spinner") 拡大スピナー
    div.spinner-grow(role="status")
      span.sr-only(Loading...)
    div.my-3
      +collapseButton("#spinner-grow-structure") 構造
    ul.struct.mt-3.collapse#spinner-grow-structure
      li 拡大スピナー 
        code div.spinner-grow
        +attrBtn(".a2-1")
        ul
          li.att.collapse.a2-1 アクセシビリティ属性 
            code role="status"
          li スクリーンリーダ用 
            code span.sr-only
            ul
              li.txt テキスト 
                code Loading...
    div.row
      each c in contexts
        div.col-lg-2.col-md-3.col-sm-4.flex-column
          div
            code= `.text-${c}`
          div(class=`spinner-grow text-${c}` role="status")
            span.sr-only(Loading...)
    h4.mt-4#spinners-alignment
      +extLink("https://getbootstrap.com/docs/4.2/components/spinners/#alignment") アラインメント
    h5.mt-3#spinners-margin
      +extLink("https://getbootstrap.com/docs/4.2/components/spinners/#margin") マージン
    p
      a(href="utilities-4.html/#spacing") 空白ユーティリティ
      |  を用いる。
    div.row
      each m in [0,1,2,3,4,5]
        div.col-lg-2.col-md-3.col-sm-4.flex-column.border
          div
            code= `.m-${m}`
          div(class=`spinner-border m-${m}` role="status")
            span.sr-only(Loading...)
    h5.mt-3#spinners-placement
      +extLink("https://getbootstrap.com/docs/4.2/components/spinners/#placement") 配置
    p.my-2 各種ユーティリティを利用できる。
    h6.mt-3#spinners-flex
      +extLink("https://getbootstrap.com/docs/4.2/components/spinners/#flex") Flexboxユーティリティ
    p.my-2
      a(href="utilities-3.html#flex-align-items") 要素の配置設定
      |  と 
      a(href="utilities-3.html#flex-auto-margins") 自動マージン
      |  を用いた例。
    div.d-flex.align-items-center
      strong Loading...
      div.spinner-border.ml-auto(role="status" aria-hidden="true")
    div.my-3
      +collapseButton("#spinner-flex-structure") 構造
    ul.struct.mt-3.collapse#spinner-flex-structure
      li
        code div.d-flex.align-items-center
        ul
          li
            code strong 
            ul
              li.txt テキスト 
                code Loading...
        ul
          li スピナー 
            code div.spinner-border
            +attrsBtn(".a3-1")
            ul.collapse.a3-1
              li.att アクセシビリティ属性 
                code role="status"
              li.att アクセシビリティ属性 
                code aria-hidden="true"
    h6.mt-3#spinners-floats
      +extLink("https://getbootstrap.com/docs/4.2/components/spinners/#floats") フロート
    p.my-2
      a(href="utilities-3.html#float") フロート
      |  と 
      a(href="utilities-1.html#clearfix") クリアフィックス
      |  を用いた例。
    each dir in ["left","right"]
      div.mt-2
        code= `.float-${dir}`
      div.clearfix
        div(class=`spinner-border float-${dir}` role="status")
          span.sr-only(Loading...)
    div.my-3
      +collapseButton("#spinner-floats-structure") 構造
    ul.struct.mt-3.collapse#spinner-floats-structure
      li
        code div.clearfix
        ul
          li スピナー 
            code div.spinner-border
            +attrsBtn(".a4-1")
            ul
              li.att.collapse.a4-1 フロート 
                code .float-(left|right)
              li.att.collapse.a4-1 アクセシビリティ属性 
                code role="status"
              li スクリーンリーダ用 
                code span.sr-only
    h6.mt-3#spinners-text-align
      +extLink("https://getbootstrap.com/docs/4.2/components/spinners/#text-align") テキストアライン
    p
      a(href="utilities-5.html/#text-alignment") テキストユーティリティ 
      | を用いた例。
    each al in ["left","center","right"]
      div.mt-2
        code= `.text-${al}`
      div(class=`text-${al}`)
        div(class=`spinner-border` role="status")
          span.sr-only(Loading...)
    div.my-3
      +collapseButton("#spinner-text-align-structure") 構造
    ul.struct.mt-3.collapse#spinner-text-align-structure
      li
        code div.text-(left|center|right)
        ul
          li スピナー 
            code div.spinner-border
            +attrBtn(".a5-1")
            ul.collapse.a5-1
              li.att アクセシビリティ属性 
                code role="status"
            ul
              li スクリーンリーダ用 
                code span.sr-only
    h4.mt-4#spinners-size
      +extLink("https://getbootstrap.com/docs/4.2/components/spinners/#size") サイズ
    p.my-2 小型のスピナーは
      code .spinner-(border|grow)-sm
      |  を追加する。
    div.row
      each t in ["border","grow"]
        div.col
          code= `div.spinner-${t}.spinner-${t}-sm`
          br
          div(class=`spinner-${t} spinner-${t}-sm` role="status")
            span.sr-only(Loading...)
    p.mt-3.mb-2 カスタムCSSまたはインラインスタイルを用いて任意の大きさに設定できる。
    div.row
      each sz in [1,2,3,4,5,6]
        div.col-lg-4.col-md-6.mt-2
          code= `style="width: ${sz}rem; height: ${sz}rem;"`
          br
          each t in ["border","grow"]
            div(class=`spinner-${t}` style=`width: ${sz}rem; height: ${sz}rem;` role="status")
              span.sr-only(Loading...)
    h4.mt-4#spinners-buttons
      +extLink("https://getbootstrap.com/docs/4.2/components/spinners/#buttons") ボタン
    p.my-2 ボタン内部にスピナーを用いて現在実行中のアクションを表現できる。
    each t in ["border","grow"]
      div.my-2
        button.btn.btn-primary(type="button" disabled)
          div(class=`spinner-${t} spinner-${t}-sm` role="status" aria-hidden="true")
          span.sr-only(Loading...)
        button.btn.btn-primary(type="button" disabled)
          div(class=`spinner-${t} spinner-${t}-sm` role="status" aria-hidden="true")
          |  Loading...
    div.my-3
      +collapseButton("#spinner-buttons-structure") 構造
    ul.struct.mt-3.collapse#spinner-buttons-structure
      li ボタン 
        code button.btn.btn-primary
        +attrsBtn(".a6-1")
        ul.collapse.a6-1
          li.att 属性 
            code type="button"
          li.att 属性 
            code disabled
        ul
          li 小型スピナー 
            code div.spinner-(border|grow).spinner-(border|grow)-sm
            +attrsBtn(".a6-2")
            ul.collapse.a6-2
              li.att アクセシビリティ属性 
                code role="status"
              li.att アクセシビリティ属性 
                code aria-hidden="true"
          li (左側のみ: テキストなしボタン用) スクリーンリーダ用 
            code span.sr-only
            ul
              li.txt テキスト 
                code Loading...
          li.txt (右側のみ) テキスト 
            code Loading...

    h2.mt-5#toasts
      +extLink("https://getbootstrap.com/docs/4.2/components/toasts/") トースト
    p トーストは主に短時間だけ表示する通知メッセージ用に用いられる。トーストはデフォルト状態は非表示であり、表示するには次のようなJavaScriptコードを用いる。
    pre.p-2.border.bg-light.mt-3
      code $('.toast').toast('show');
    p デフォルト設定では表示後500ms後に自動的に画面から消去されるが、下記の
      a(href='#toasts-data-options') data属性オプション
      | を用いて消去までの時間を設定したり、消去せずそのまま画面上に残すこともできる。
    h4.mt-3#toasts-examples
      +extLink("https://getbootstrap.com/docs/4.2/components/toasts/#examples") 例
    h5.mt-3#toasts-basic
      +extLink("https://getbootstrap.com/docs/4.2/components/toasts/#basic") 基本例
    +toast1
    div.my-3
      +collapseButton("#toasts-basic-structure") 構造
    ul.struct.mt-3.collapse#toasts-basic-structure
      li トースト(外枠) 
        code div.toast
        +attrsBtn(".a7-1")
        ul
          li.att.collapse.a7-1 アクセシビリティ属性 
            code role="alert"
          li.att.collapse.a7-1 アクセシビリティ属性 
            code aria-live="assertive"
          li.att.collapse.a7-1 アクセシビリティ属性 
            code aria-atomic="true"
          li.att.collapse.a7-1 オプション(自動消去しない) 
            code data-autohide="false"
          li ヘッダ 
            code div.toast-header
            ul
              li ロゴアイコン 
                code img.rounded.mr-2
                +attrsBtn(".a7-2")
                ul.collapse.a7-2
                  li.att 属性 
                    code src="../img/20x20-blue.svg"
                  li.att 属性 
                    code alt="Logo placeholder"
              li タイトル 
                code strong.mr-auto
                ul
                  li.txt テキスト 
                    code Bootstrap
              li ヘッダ 
                code small.muted
                ul
                  li.txt Text 
                    code 11 mins ago
              li クローズボタン 
                code button.ml-2.mb-1.close
                +attrsBtn(".a7-3")
                ul
                  li.att.collapse.a7-3 属性 
                    code type="button"
                  li.att.collapse.a7-3 属性 
                    code data-dismiss="toast"
                  li.att.collapse.a7-3 アクセシビリティ属性 
                    code aria-label="Close"
                  li ボタンテキスト 
                    code span
                    +attrBtn(".a7-4")
                    ul
                      li.att.collapse.a7-4 アクセシビリティ属性 
                        code aria-hidden="true"
                      li.txt テキスト 
                        code= "&times;"
          li ボディ 
            code div.toast-body
            ul
              li テキスト 
                code Hello, world! This is a toast message.
    h5.mt-3#toasts-data-options data属性オプション
    p.my-2 トースト外枠 
      code div.toast
      |  に次の属性を用いて動作を設定できる。
    ul
      li
        code data-delay="{時間[msec]}"
        |  消去までの時間を設定(デフォルト値は
        code "500"
        | [msec])
      li
        code data-animation="(true|false)"
        |  CSSアニメーションの設定(デフォルト値は 
        code "true"
        |  )
      li
        code data-autohide="(true|false)"
        |  自動消去の設定(デフォルト値は 
        code "true"
        |  )
    h6.mt-2#toasts-live-demo デモ
    p.my-2 次のデモを使って上記data属性オプションを実際に確認できる。
    div.form-inline
      label.my-1.mr-2(for="toasts-demo-delay") Delay
      select.custom-select.my-1.mr-3#toasts-demo-delay
        each item in [[200,"200ms"],[500,"500ms (default)"],[1000,"1s"],[2000,"2s"],[5000,"5s"],[10000,"10s"],[-1,"does not hide"]]
          option(value=item[0] selected=item[0]==500)= item[1]
      div.custom-control.custom-checkbox.my-1.mr-3
        input.custom-control-input#toasts-demo-animation(type="checkbox" checked)
        label.custom-control-label(for="toasts-demo-animation") CSS animation
      button.btn.btn-primary.my-1.mr-sm-2#toasts-demo-start Start
    div.toast.fade.hide#toasts-demo(role="alert" aria-live="assertive" aria-atomic="true")
      +toastContent("just now", "Hello, world! This is a toast message.")
    h5.mt-3#toasts-translucent
      +extLink("https://getbootstrap.com/docs/4.2/components/toasts/#translucent") 半透明
    p.my-2 トーストは半透明で(背景が透けて見える)、さらにブラウザが 
      +extLink("https://developer.mozilla.org/ja/docs/Web/CSS/backdrop-filter")
        code backdrop-filter
      |  CSSプロパティをサポートしている場合は背景のぼかし効果も加える。
    div.bg-secondary.p-2(style="background-image: url('../img/GitHub-Mark-32px.png');")
      +toast1
    h5.mt-3#toasts-stacking
      +extLink("https://getbootstrap.com/docs/4.2/components/toasts/#stacking") 積み重ね
    p.my-2 トーストは複数個を同時表示可能で、上下に積み重なった状態で表示する。
    +toast2
    h4.mt-3#toasts-placement
      +extLink("https://getbootstrap.com/docs/4.2/components/toasts/#placement") 配置
    p.my-2 CSSのインラインスタイルを用いて、トーストを任意の場所に配置できる。次は(もっとも典型的な)左上への配置例(設定方法は下記 
      button.btn.btn-outline-info.btn-sm 構造
      |  をクリックして表示)。

    div.bg-secondary(aria-live="polite" aria-atomic="true" style="position: relative; min-height: 200px;")
      div.toast(style="position: absolute; top: 0; right: 0;" data-autohide="false")
        +stdToastContent
    div.my-3
      +collapseButton("#toasts-placement-1-structure") 構造
    ul.struct.mt-3.collapse#toasts-placement-1-structure
      li 親要素(背景) 
        code div.bg-secondary
        +attrsBtn(".a8-1")
        ul
          li.att.collapse.a8-1 アクセシビリティ属性 
            code aria-live="polite"
          li.att.collapse.a8-1 アクセシビリティ属性 
            code aria-atomic="true"
          li.att.collapse.a8-1 インラインスタイル 
            code style="position: relative; min-height: 200px;"
          li トースト(外枠) 
            code div.toast
            +attrsBtn(".a8-2")
            ul
              li.att.collapse.a8-2 インラインスタイル 
                code style="position: absolute; top: 0; right: 0;"
              li.att.collapse.a8-2 オプション 
                code data-autohide="false"
              li ヘッダ(
                a(href="#toasts-basic") 基本例
                | と同じ)
              li ボディ(
                a(href="#toasts-basic") 基本例
                | と同じ)
    p.mt-3.mb-2 複数積み重ね表示と組み合わせる場合はラッパ要素を用いてグループ化すればよい。
    div.bg-secondary(aria-live="polite" aria-atomic="true" style="position: relative; min-height: 250px;")
      div(style="position: absolute; top: 0; right: 0;")
        +toast2
    div.my-3
      +collapseButton("#toasts-placement-2-structure") 構造
    ul.struct.mt-3.collapse#toasts-placement-2-structure
      li 親(背景) 
        code div.bg-secondary
        +attrsBtn(".a9-1")
        ul
          li.att.collapse.a9-1 アクセシビリティ属性 
            code aria-live="polite"
          li.att.collapse.a9-1 アクセシビリティ属性 
            code aria-atomic="true"
          li.att.collapse.a9-1 インラインスタイル 
            code style="position: relative; min-height: 250px;"
          li.att ラッパ 
            code div
            +attrBtn(".a9-2")
            ul
              li.att.collapse.a9-2 インラインスタイル 
                code style="position: absolute; top: 0; right: 0;"
              each n in [1,2]
                li= `トースト(${n}) (`
                  a(href="#toasts-basic") 基本例
                  | と同じ)
    h4.mt-3#toasts-accessibility
      +extLink("https://getbootstrap.com/docs/4.2/components/toasts/#accessibility") アクセシビリティ
    h5.mt-2#toasts-accessibility-summary まとめ
    ul
      li 全体を 
        +extLink("https://developer.mozilla.org/ja/docs/Web/Accessibility/ARIA/ARIA_Live_Regions") aria-live region
        |  で囲む(具体的には外枠に 
        code aria-live="(assertive|polite|...)"
        |  を設定)
      li
        code aria-atomic="true"
        |  を設定する
      li ロール属性 
        code role="(alert|status|...)"
        |  を設定する

    h2.mt-5#tooltips
      +extLink("https://getbootstrap.com/docs/4.2/components/tooltips/") ツールチップ
    p.mt-2.mb-1 HTML要素の 
      code title
      |  属性を用いたツールチップ(ポップアップ)表示機能をカスタマイズしたもの。実装に 
      +extLink("https://popper.js.org/") Popper.js
      |  を利用している。
    ul.my-1
      li ブラウザデフォルトのツールチップ ⇒ 
        span.text-danger(title="デフォルトのツールチップ") この部分
        |  をホバーすると表示
      li Bootstrapのツールチップ ⇒ 
        span.text-danger(title="Bootstrapのツールチップ" data-toggle="tooltip") この部分
        |  をホバーすると表示
    div.alert.alert-info(role="alert")
      code a
      |  や 
      code button
      |  などタブストップを受ける要素は 
      kbd Tab
      |  キーでフォーカスした場合もポップアップ表示する。
    h4.mt-4#tooltips-example-enable-tooltips-everywhere
      +extLink("https://getbootstrap.com/docs/4.2/components/tooltips/#example-enable-tooltips-everywhere") 初期化方法
    p Bootstrapのツールチップは初期状態では無効になっており、有効にするためにはJavaScriptコードが必要。最も簡単な方法を次に示す。
    pre.p-2.border.bg-light
      code $('[data-toggle="tooltip"]').tooltip();
    div.alert.alert-warning(role="alert")
      strong 注: 
      | コードの置き場所に注意。ツールチップを使っている場所(の近く)に 
      code script
      |  を使っても動作しない。jquery, popper.js, bootstrap.jsが事前に必要で、これら3つの後に設定(実行)すること。
    h4.mt-4#tooltips-examples
      +extLink("https://getbootstrap.com/docs/4.2/components/tooltips/#examples") 設定方法
    ul.my-1
      li 任意の要素に設定可: 次の属性を設定
      ul
        li
          code data-toggle="tooltip"
        li
          code title="{表示テキスト}"
    p.mt-2 設定例 ⇒ 
      span.text-danger(data-toggle="tooltip" title="ツールチップ表示") この部分
      |  に設定(ホバーすると表示)
    h5.mt-4 表示方向の設定
    ul.my-1
      li 次の属性を追加(デフォルトは 
        code "top"
        |  )
        ul
          li
            code data-placement=("top"|"right"|"bottom"|"left")
    p.mt-2.mb-1 設定例
    div.row.m-0.py-1
      div.col.m-0.text-center
        button.btn.btn-light.mt-0(type="button" data-toggle="tooltip" data-placement="top" title="Tooltip on top")
          code data-placement="top"
    div.row.m-0.py-1
      div.col.m-0.text-right.pr-2
        button.btn.btn-light.my-0(type="button" data-toggle="tooltip" data-placement="left" title="Tooltip on left")
          code data-placement="left"
      div.col.m-0.text-left.pl-2
        button.btn.btn-light.my-0(type="button" data-toggle="tooltip" data-placement="right" title="Tooltip on right")
          code data-placement="right"
    div.row.m-0.py-1
      div.col.m-0.text-center
        button.btn.btn-light.mt-0(type="button" data-toggle="tooltip" data-placement="bottom" title="Tooltip on bottom")
          code data-placement="bottom"
    div.alert.alert-info.my-2(role="alert") 表示時は(Popper.jsを利用して)動的位置判定を行い、空間不足の場合は逆方向にポップアップする。特に左右に設定している場合、ブラウザの幅を狭めると逆方向に表示する(上の例で実際に確認できる)。
    h4.mt-4#using-html HTMLを用いたテキスト設定
    ul.my-1
      li 次の属性を追加
        ul: li
          code data-html="true"
      li HTMLでテキストを記述(例)
        ul: li
          code= `title="TNT(C<sub>6</sub>H<sub>2</sub>(NO<sub>2</sub>)<sub>3</sub>CH<sub>3</sub>)"`
    p 設定例 ⇒ 
      span.text-danger(data-toggle="tooltip" data-html="true" title="TNT(C<sub>6</sub>H<sub>2</sub>(NO<sub>2</sub>)<sub>3</sub>CH<sub>3</sub>)") この部分
      |  をホバーすると表示
    h4.mt-4#disabled-elements
      +extLink("https://getbootstrap.com/docs/4.2/components/tooltips/#disabled-elements") 無効化した要素への設定
    p.my-2 要素に属性 
      code disabled
      |  を設定した場合ツールチップは表示されなくなる。次の例は 
      code button
      |  に下記の通り設定しているが、ツールチップはポップアップしない。
    ul.struct
      li
        code button.btn.btn-primary
        +attrsBtn(".a2-1")
        ul
          li.att.collapse.a2-1 属性 
            code type="button"
          li.att.collapse.a2-1 属性 
            code data-toggle="tooltip"
            |  (設定している)
          li.att.collapse.a2-1 属性 
            code title="Disabled tooltip"
            |  (これも設定、しかし...)
          li.att.collapse.a2-1 属性 
            code disabled
            |  (これを設定するとツールチップも無効化される)
          li.txt テキスト 
            code Disabled button
    p.my-2 設定例(ツールチップは表示されない)
    p.my-2
      button.btn.btn-primary(type="button" data-toggle="tooltip" title="Disabled tooltip" disabled) Disabled button
    p.mt-3.mb-1 しかし 
      code disabled
      |  は設定するがツールチップは表示したケースもある。その場合は親要素を作ってそこにツールチップを設定し、その中に 
      code disabled
      |  を設定した要素を入れればよい。対応例は次の通り。
    ul.struct
      li ツールチップ用親要素 
        code span
        +attrsBtn(".a3-1")
        ul
          li.cls.collapse.a3-1 設定
            code .d-inline-block
            |  ( 
            code button
            |  と同じ 
            code display
            |  にする)
          li.att.collapse.a3-1 属性 
            code tabindex="0"
            |  ( 
            kbd Tab
            |  キーはここで受ける)
          li.att.collapse.a3-1 属性 
            code data-toggle="tooltip"
          li.att.collapse.a3-1 属性 
            code title="Disabled tooltip"
          li 子要素 
            code button.btn.btn-primary
            +attrsBtn(".a3-2")
            ul
              li.att.collapse.a3-2 属性 
                code type="button" 
              li.att.collapse.a3-2 属性 
                code style="pointer-events: none;"
                |  (イベントターゲットから完全に外す)
              li.att.collapse.a3-2 属性 
                code disabled
              li.txt テキスト 
                code Disabled button
    p.mt-3 設定例: 
      code button
      |  は 
      code disabled
      |  だがツールチップは動作する(実際は親要素が処理している)
    p
      span.d-inline-block(tabindex="0" data-toggle="tooltip" title="Disabled tooltip")
        button.btn.btn-primary(style="pointer-events: none;" type="button" disabled)
          | Disabled button

    +breadcrumbLevel1("コンポーネント(12): スクロールスパイ / スピナー / トースト / ツールチップ")
