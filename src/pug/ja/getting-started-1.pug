extends ../template-cdn-ja
include ../mixins-ja

block head
  title Bootstrap 4 tutorial: Getting started

block body
  div.container
    +pageHeader("getting-started-1")
      p.lead Getting started (1): 
        a(href="#intro") スタートアップ
        |  / 
        a(href="#download") 利用法
        |  / 
        a(href="#contents") コンテンツ
        |  / 
        a(href="#browsers-devices") ブラウザ
        |  / 
        a(href="#javascript") JavaScript

    h2.mt-4#intro
      +extLink("https://getbootstrap.com/docs/4.2/getting-started/introduction/") スタートアップ
    p.my-2 まずBootstrapの最も簡単な利用方法として
      +extLink("https://ja.wikipedia.org/wiki/コンテンツデリバリネットワーク") CDN
      | を利用する方法を説明する(本チュートリアルもこの方法で作られている）。
    ul
      li HTMLのタグ設定だけで利用可能
      li ツールの設定やダウンロードなどは不要
    p.my-2 最低限必要なHTML設定を構造で示す。⇒ 
      +collapseButton("#intro-structure") 構造
    ul.struct.collapse#intro-structure
      li
        a(href="#intro-doctype") DOCTYPE宣言 
        code= "<!DOCTYPE html>"
      li
        code html
        +attrBtn(".a1-1")
        ul
          li.att.collapse.a1-1 属性(
            a(href="#intro-lang") 言語コード設定
            | ) 
            code lang="{言語コード}"
          li
            code head
            ul
              li
                a(href="#intro-encoding") 文字エンコーディング 
                code meta
                +attrBtn(".a1-2")
                ul.collapse.a1-2
                  li.att 属性 
                    code charset="utf-8"
              li
                a(href="#intro-viewport") ビューポート設定 
                code meta
                +attrsBtn(".a1-3")
                ul.collapse.a1-3
                  li.att 属性 
                    code name="viewport"
                  li.att 属性 
                    code content="width=device-width, initial-scale=1, shrink-to-fit=no"
              li
                a(href="#intro-bootstrap-css") Bootstrap CSS読み込み 
                code link
                +attrsBtn(".a1-4")
                ul.collapse.a1-4
                  li.att 属性 
                    code rel="stylesheet"
                  li.att 属性 
                    code href="{Bootstrap CSS CDNのURL}"
                  li.att 属性 
                    code integrity="sha384-{SHA-384文字列}"
                  li.att 属性 
                    code crossorigin="anonymous"
              li タイトル設定 
                code title
                ul
                  li.txt テキスト 
                    code {ページタイトル}
              li (オプション) 
                code style
                |  など(必要に応じて追加)
          li
            code body
            ul
              li HTMLコンテント(各自記述)
              each lib in [[1,"jQuery"], [2,"Popper.js"], [3,"Bootstrap JavaScript"]]
                - let cls = `a1-5-${lib[0]}`
                li
                  a(href="#intro-javascript") JavaScript読み込み
                  = ` (${lib[1]}) `
                  code script
                  +attrsBtn(`.${cls}`)
                  ul(class=`collapse ${cls}`)
                    li.att 属性 
                      code=`src="{${lib[1]} CDNのURL}"`
                    li.att 属性 
                      code integrity="sha384-{SHA-384文字列}"
                    li.att 属性 
                      code crossorigin="anonymous"
    p.my-2 CDNを利用した読み込みにはそれぞれURLとSHA-384文字列が必要。具体的な設定は公式サイトの次の例文からコピペすればよい。
    p.my-2 ⇒ 
      +extLink("https://getbootstrap.com/docs/4.2/getting-started/introduction/#starter-template") Starter template
    h4.mt-4#intro-doctype DOCTYPE宣言
    p.my-2 HTMLの先頭は必ず 
      code= "<!DOCTYPE html>"
      |  と書く。これは後方互換(HTML4以前との判別)用の記述で、HTML5以降の(新しい)HTML文書であることを示すのに用いられる。⇒ 
      +collapseButton("#intro-doctype-reference") リファレンス
      |  
      +collapseButton("#intro-doctype-note") 補足
    ul.collapse#intro-doctype-reference
      li
        +extLink("https://developer.mozilla.org/ja/docs/Glossary/Doctype") MDN - DOCTYPE
      li
        +extLink("https://www.w3.org/TR/html52/syntax.html#the-doctype") W3C - HTML5.2 - DOCTYPE
        |  (
        +extLink("https://momdo.github.io/html/syntax.html#the-doctype") WHATWG和訳
        | )
      li 歴史的な経緯に興味のある人は
        +extLink("https://ja.wikipedia.org/wiki/文書型宣言") Wikipedia - 文書型宣言
        | を参照
    div.alert.alert-info.collapse#intro-doctype-note(role="alert")
      code DOCTYPE
      |  を大文字にするのHTMLの元だった昔のマークアップ言語(
      +extLink("https://ja.wikipedia.org/wiki/Standard_Generalized_Markup_Language") SGML
      | 等)の名残り。今のルールでは大文字小文字は区別しないため公式ドキュメントの 
      code= `<!doctype html>`
      |  も正しいが、かなり珍しい。
    h4.mt-4#intro-lang 言語コード設定
    p.my-2 ルート要素の 
      code html
      |  には属性 
      code lang="{言語コード}"
      |  で文書中に主に用いる言語を設定する(
      +extLink("https://ja.wikipedia.org/wiki/ISO_639-1") ISO 639-1
      |   のアルファベット2文字: 日本語は 
      code lang="ja"
      | )。⇒ 
      +collapseButton("#intro-lang-reference") リファレンス
      ul.mt-3.collapse#intro-lang-reference
        li
          +extLink("https://developer.mozilla.org/ja/docs/Web/HTML/Element/html") MDNリファレンス - html
          |  (⇒ 
          +extLink("https://developer.mozilla.org/ja/docs/Web/HTML/Global_attributes/lang") グローバル属性 
            code lang
          | )
        li
          +extLink("https://www.w3.org/TR/html52/dom.html#the-lang-and-xmllang-attributes") W3C - HTML5.2 - The lang and xml:lang attributes
          |  (
          +extLink("https://momdo.github.io/html/dom.html#the-lang-and-xml:lang-attributes") WHATWG和訳
          | )
        li
          +extLink("https://tools.ietf.org/html/bcp47") BCP 47 - Tags for Identifying Languages
          |  (現在の言語コードの完全仕様)
        li
          +extLink("https://ja.wikipedia.org/wiki/IETF言語タグ") Wikipedia - IETF言語タグ
          |  (BCP 47の分かりやすい解説)
        li
          +extLink("https://ja.wikipedia.org/wiki/ISO_639-1コード一覧") Wikipedia - ISO 639-1コード一覧
          |  (通常はこの一覧のアルファベット2文字を用いる)
    h4.mt-4#intro-encoding 文字エンコーディング
    p.my-2
      code head
      |  ブロックの始め(ファイル先頭から1024バイト以内)にHTMLファイルの文字エンコーディングを記述するが、今は必ず
      +extLink("https://ja.wikipedia.org/wiki/UTF-8") UTF-8
      | を用いること。大文字小文字の区別はない(
      code "utf-8"
      | , 
      code "UTF-8"
      | , 
      code "Utf-8"
      |  等すべてOK)。⇒ 
      +collapseButton("#intro-encoding-refference") リファレンス
      ul.mt-3.collapse#intro-encoding-refference
        li
          +extLink("https://developer.mozilla.org/ja/docs/Web/HTML/Element/meta#Attributes") MDNリファレンス - meta
          |  (
          code charset
          |  の解説を参照)
        li
          +extLink("https://www.w3.org/TR/html52/document-metadata.html#specifying-the-documents-character-encoding") W3C - HTML5.2 - Specifying the document's character encoding
          |  (
          +extLink("https://momdo.github.io/html/semantics.html#charset") WHATWG和訳
          | )
        li
          +extLink("https://www.w3.org/International/questions/qa-html-encoding-declarations.ja") W3C - HTMLで文字エンコーディングを指定する
          |  (解説、なぜUTF-8にすべきかについても詳しい)
    h4.mt-4#intro-viewport ビューポート設定
    p.my-2 ページの初期サイズ(幅と拡大率)を設定する。モバイル機器用ページにBootstrapを用いる場合は必ずこの設定が必要(分からなければコピペでもOK)。⇒ 
      +collapseButton("#intro-viewport-reference") リファレンス
      |  
      +collapseButton("#intro-viewport-note") 補足
      |  
      +collapseButton("#intro-viewport-ios9") iOS 9の注意
    ul.collapse#intro-viewport-reference
      li
        +extLink("https://developer.mozilla.org/ja/docs/Web/HTML/Element/meta#Attributes") MDNリファレンス - meta
        |  (最後の方に 
        code viewport
        |  の解説がある)
      li
        +extLink("https://www.w3.org/TR/css-device-adapt-1/#viewport-meta") W3C Working draft - CSS Device Adaptation Module Level 1 - Viewport &lt;meta&gt; element
        |  (
        +extLink("https://momdo.github.io/css-device-adapt-1/#viewport-meta") 和訳
        | )
    div.alert.alert-info.collapse#intro-viewport-note(role="alert")
      p
        strong 補足(2018年8月現在): 
        | ビューポート設定はもともとiPhoneの独自仕様だったが、その後Android等も採用し標準化された。元のiPhone専用書式は 
        code meta
        |  に記述する形式のみだったが、その後CSSの一部として正式に仕様化を進めることになった経緯がある。
      p そのため現在のWorking draft(暫定仕様)はCSS扱いだが、実際にはまだ多くのブラウザは 
        code meta
        |  側の実装しか行っていない(CSSへの対応状況は 
        +extLink("https://caniuse.com/#search=%40viewport") caniuse - @viewport
        |  や 
        +extLink("https://developer.mozilla.org/ja/docs/Web/CSS/Reference/@viewport") MDN - @viewport
        |  を参照)。
      p.mb-0 また暫定仕様では元のiPhone仕様との整合性確保のため、
        code content
        |  属性の値とCSS(
        code @viewport
        | )の間の変換規則(
        +extLink("https://www.w3.org/TR/css-device-adapt-1/#parsing-algorithm") 英文
        | /
        +extLink("https://momdo.github.io/css-device-adapt-1/#parsing-algorithm") 日本語
        | )がある。特に文の区切りにCSSの 
        code ;
        |  ではなく 
        code ,
        |  を用いる点に注意。
    div.alert.alert-warning.collapse#intro-viewport-ios9(role="alert")
      strong iOS 9に関する注意: 
      code shrink-to-fit=no
      |  はiPhone iOS 9(Safari 9)専用の設定。このバージョンのSafariはこれがないとページを自動縮小して全体表示する機能が優先され 
      code initial-scale=1
      |  が無効になる(勝手に縮小する)。9で追加されたが10で廃止されたため上記リファレンス仕様に書かれていない(
      +extLink("https://developer.apple.com/library/content/releasenotes/General/WhatsNewInSafari/Articles/Safari_9_0.html") What's New in Safari - 9.0
      |  参照)。なお他のブラウザは単に無視する(付けておいても無害)。
    h4.mt-4#intro-cdn CDN読み込み
    p CDNを利用する場合は外部読み込みタグ(CSSは 
      code link
      | , JavaScriptは 
      code script
      | )に属性 
      code integrity="sha384-{SHA-384文字列}"
      |  と 
      code crossorigin="anonymous"
      |  を追加する。⇒ 
      +collapseButton("#intro-cdn-reference") リファレンス
      |  
      +collapseButton("#intro-cdn-note") 補足
    ul.collapse#intro-cdn-reference
      li
        code integrity
        |  について
        ul
          li
            +extLink("https://developer.mozilla.org/ja/docs/Web/Security/Subresource_Integrity") MDN - Subresource Integrity
          li
            +extLink("https://w3c.github.io/webappsec-subresource-integrity/") W3C - Subresource Integrity
            |  (
            +extLink("https://triple-underscore.github.io/webappsec-subresource-integrity-ja.html") 和訳
            | )
      li
        code crossorigin
        |  について
        ul
          li
            +extLink("https://developer.mozilla.org/ja/docs/Web/HTML/CORS_settings_attributes") MDN - CORS設定属性
          li
            +extLink("https://html.spec.whatwg.org/multipage/urls-and-fetching.html#cors-settings-attributes") WHATWG - CORS settings attributes
            |  (
            +extLink("https://momdo.github.io/html/urls-and-fetching.html#cors-settings-attributes") 和訳
            | )
    div.alert.alert-info.collapse#intro-cdn-note(role="alert")
      strong 補足: 
      | SHA-384は
      +extLink("https://ja.wikipedia.org/wiki/暗号学的ハッシュ関数") 暗号学的ハッシュ関数
      |  
      +extLink("https://ja.wikipedia.org/wiki/SHA-2") SHA-2
      | のひとつで、現在(2018年)のところ十分な強度を持つと見なされている。これを用いてあらかじめハッシュ値(の
      +extLink("https://ja.wikipedia.org/wiki/Base64") Base64
      |エンコード文字列)を求めておきホスト先と照合を行う(付けないとホスト先からの応答が遅くなることがある)。通常は公式サイトのテンプレートをそのままコピペすればよい。また自分で計算する場合は
      +extLink("https://developer.mozilla.org/ja/docs/Web/Security/Subresource_Integrity/#Tools_for_generating_SRI_hashes") MDNリファレンス
      | に例文付きの解説があるので参考にするとよい。
    h5.mt-4#intro-bootstrap-css Bootstrap CSS読み込み
    p 通常は公式ドキュメントの 
      +extLink("https://getbootstrap.com/docs/4.2/getting-started/introduction/#starter-template") Starter template
      |  の設定をそのまま使えばよい。⇒ 
      +collapseButton("#intro-bootstrap-css-note") 補足
    div.alert.alert-info.collapse#intro-bootstrap-css-note(role="alert")
      strong 補足: 
      | BootstrapのCDNホスト先は今までに数回変わっている(大昔はNetDNA、その後はMaxCDN、現在はStackPath)。そのためサイト運営中も定期的に確認すべき。現在のCDNホストは
      +extLink("https://www.bootstrapcdn.com/") BootstrapCDN
      | を参照。旧バージョンもここから利用できる(→ 
      +extLink("https://www.bootstrapcdn.com/legacy/bootstrap/") Bootstrap Legacy
      | )。
    h5.mt-4#intro-javascript JavaScript読み込み
    p BootstrapはCSSだけで実現できない機能をJavaScriptで実装している。これは
      +extLink("http://jquery.com/") jQuery
      | プラグイン形式で実装されていることから伝統的に「(Bootstrapの) JavaScriptプラグイン」と呼ばれておりjQueryに全面依存している。また現バージョン(V4以降)は
      +extLink("https://popper.js.org/") Popper.js
      | にも依存している。そのためこの2つを事前に読み込む必要がある。
    p 通常は次の順番で読み込むが、jQueryとPopper.jsの間に依存性はないので1と2は逆でもよい。CDN用の全設定は 
      +extLink("https://getbootstrap.com/docs/4.2/getting-started/introduction/#starter-template") Starter template
      |  を参照(内容が分からなくてもこの通り記述すれば使える)。
    ol
      li jQuery - 1.9.1以上、Slim build (AJAX, Effectsなし版)で十分
      li Popper.js
      li Bootstrap JavaScript
    div.alert.alert-info(role="alert") 開発の初期段階はCDNを利用し、ある程度理解した後でカスタマイズを検討するのがお勧め。ここから下は大部分がカスタマイズを行う人向けの内容なので、最初は飛ばして
      a(href="getting-started-2.html/#accessibility") アクセシビリティ
      | だけ確認して先に進むとよい。

    h2.mt-5#download
      +extLink("https://getbootstrap.com/docs/4.2/getting-started/download/") Bootstrapの利用法
    p.my-2 Bootstrapの様々な入手/利用方法(概要のみ)。
    ul
      li ビルド済みファイルのみ必要な場合 ⇒ 
        +extLink("https://getbootstrap.com/docs/4.2/getting-started/download/#compiled-css-and-js") Compiled CSS and JS
      li SassやJavaScriptなどのソースファイルが必要な場合 ⇒ 
        +extLink("https://getbootstrap.com/docs/4.2/getting-started/download/#source-files") Source files
        ul
          li マスターはGitHub( 
            +extLink("https://github.com/twbs/bootstrap/") https://github.com/twbs/bootstrap/
            |  からZIPダウンロード)
      li CDNを利用する場合 ⇒
        +extLink("https://getbootstrap.com/docs/4.2/getting-started/download/#bootstrapcdn") BootstrapCDN
        |  (詳しくは 
        a(href="#intro") スタートアップ
        | を参照)
      li ビルド済みファイルのみ必要な場合 ⇒ 
        +extLink("https://getbootstrap.com/docs/4.2/getting-started/download/#compiled-css-and-js") Compiled CSS and JS
      li 管理ツールを用いる場合 ⇒ 
        +extLink("https://getbootstrap.com/docs/4.2/getting-started/download/#package-managers") Package managers
        ul
          li JavaScript(node.js)
            ul
              li ⇒ 
                +extLink("https://getbootstrap.com/docs/4.2/getting-started/download/#npm") npm
                |  (Bootstrap自身はnpm環境でビルドされている)
              li ⇒ 
                +extLink("https://getbootstrap.com/docs/4.2/getting-started/download/#yarn") yarn
          li Ruby ⇒ 
            +extLink("https://getbootstrap.com/docs/4.2/getting-started/download/#rubygems") RubyGems
          li PHP ⇒ 
            +extLink("https://getbootstrap.com/docs/4.2/getting-started/download/#composer") Composer
          li .NET ⇒ 
            +extLink("https://getbootstrap.com/docs/4.2/getting-started/download/#composer") NuGet
    div.alert.alert-info(role="alert") Bootstrapの全データは
      +extLink("https://github.com/") GitHub
      | の
      +extLink("https://github.com/twbs/bootstrap") bootstrapレポジトリ
      | で管理している。リリースの全バージョン履歴は
      +extLink("https://github.com/twbs/bootstrap/releases") Releases
      | ページで確認でき、ここから全ソースをダウンロードできる。

    h2.mt-5#contents
      +extLink("https://getbootstrap.com/docs/4.2/getting-started/contents/") ファイルコンテンツ
    p.my-2 Bootstrapのファイル内容について。
    h4.ht-4#contents-precompiled
      +extLink("https://getbootstrap.com/docs/4.2/getting-started/contents/#precompiled-bootstrap") 配布版(コンパイル済み)Bootstrap
    p.my-2 (
      code .map
      |  ファイルは除外)
    ul
      li
        code bootstrap/
        +filesBtn(".pre")
        ul.collapse.pre
          li
            code css/
            +filesBtn(".pre-css")
            ul.collapse.pre-css
              li
                code bootstrap(.min).css
                |  - フルバージョン
              li
                code bootstrap-grid-(.min).css
                |  - 
                a(href="layout-1.html#grid") グリッド
                | と
                a(href="utilities-3.html#flex") Flexboxユーティリティ
                | のみ
              li
                code bootstrap-reboot-(.min).css
                |  - 
                a(href="content-1.html#reboot") Reboot (リセットCSS)
                | のみ
          li
            code js/
            +filesBtn(".pre-js")
            ul.collapse.pre-js
              li
                code bootstrap.bundle(.min).js
                |  - Popper.jsとBootstrap JSの合体版(事前にjQuery読み込みが必要)
              li
                code bootstrap(.min).js
                |  - Bootstrap JSのみ(事前にjQueryとPopper.jsの読み込みが必要)
    h4.mt-4#contents-source-code
      +extLink("https://getbootstrap.com/docs/4.2/getting-started/contents/#bootstrap-source-code") Bootstrapソースコード
    p.my-2 (主要部分のディレクトリ構造のみ)
    ul
      li
        code bootstrap-4.X.X/
        +filesBtn(".src")
        ul.collapse.src
          li
            code assets/
            |  - ドキュメント用ファイル(CSS, JavaScript, 画像)
          li
            code build/
            |  - ビルド用スクリプトコードと設定ファイル
          li
            code dist/
            |  - コンパイル済みファイル(
            a(href="#contents-precompiled") 配布版(コンパイル済み)Bootstrap
            | と同じ)
          li
            code docs/
            |  - ドキュメント用ソースファイル(Markdown)
          li
            code js/
            |  JavaScriptファイル
            +filesBtn(".src-js")
            | 
            +collapseButtonSm("#javascript-modules") モジュール形式について
            ul.collapse.src-js
              li
                code dist/
                |  - モジュールファイル(UMD形式 - CommonJSとAMDに対応)
              li
                code src/
                |  - モジュールファイル(ES2015形式)
              li
                code tests/
                |  - テスト用ファイル
          li
            code nuget/
            |  - NuGet (.NET用パッケージマネージャ)用ファイル
          li
            code scss/
            |  Sass(.scss)ソースファイル一式
          li
            code package.json
    div#javascript-modules-button
      +collapseButton("#javascript-modules") JavaScriptモジュール形式について
    div.alert.alert-info.collapse.mt-3#javascript-modules(role="alert") 
      p.my-2 現在のJavaScriptでは中規模以上の開発にモジュール化の手法が用いられ、現行の主流モジュール仕様として次の3種類がある。
      ul.my-2
        li ES2015(ES6) (最新仕様、Bootstrap 4はこれを採用)
        li CommonJS (
          +extLink("https://nodejs.org/ja/") node.js
          |  など)
        li AMD (
          +extLink("https://requirejs.org/") require.js
          |  など)
      p.my-2 BootstrapのJavaScriptモジュールはES2015形式で、他のES2015モジュール(例えば 
        +extLink("https://popper.js.org/") Popper.js
        |  のバンドル前モジュールソース)とそのまま組み合わせて利用できる。
      p.my-2 またバージョン4.1.3からCommonJSとAMDにも対応するようになった。
        code bootstrap-4.X.X/js/dist/
        |  のファイルは元のES2015形式モジュールを 
        +extLink("https://rollupjs.org/") rollup.js
        |  でUMD(Universal Module Definition)形式に変換したもの。UMDはCommonJSとAMDの両方に対応するファイル形式で、rollup.jsではさらにブラウザから 
        code= '<script>'
        |  で直接読み込むことにも対応している。
      p.my-2 また配布版BootstrapのJavaScriptファイルはrollup.jsでES2015形式モジュールソースをバンドルしたもの。Popper.jsもES2015モジュールなので両者のバンドル版もある。

    h2.mt-5#browsers-devices
      +extLink("https://getbootstrap.com/docs/4.2/getting-started/browsers-devices/") 対応ブラウザ
    p.my-2 Bootstrap 4は現行の主要ブラウザに対応しており、対応ブラウザの条件を 
      +extLink("https://github.com/twbs/bootstrap/blob/v4.1.3/.browserslistrc")
        code .browserslistrc
      |  (v4.1.2までは 
      +extLink("https://github.com/twbs/bootstrap/blob/v4.1.2/package.json")
        code package.json
      |  の中)に 
      +extLink("https://github.com/browserslist/browserslist") browserslist
      |  形式で記述している(書式は 
      +extLink("https://github.com/browserslist/browserslist#best-practices") Best Practices
      |  と 
      +extLink("https://github.com/browserslist/browserslist#full-list") Full List
      |  を参照)。 ⇒ 
      +collapseButton("#browserslist") 表示
    pre.mt-3.p-2.border.bg-light.collapse#browserslist
      code
        = `# https://github.com/browserslist/browserslist#readme\n`
        = `\n`
        = `>= 1%\n`
        = `last 1 major version\n`
        = `not dead\n`
        = `Chrome >= 45\n`
        = `Firefox >= 38\n`
        = `Edge >= 12\n`
        = `Explorer >= 10\n`
        = `iOS >= 9\n`
        = `Safari >= 9\n`
        = `Android >= 4.4\n`
        = `Opera >= 30\n`
    p.my-2 この情報は 
      +extLink("https://github.com/postcss/autoprefixer") Autoprefixer
      |  を用いてCSSにベンダープリフィクスを付加する処理に用いられる。なおAutoprefixerはBootstrap CSSをカスタマイズする際の必須ツール(V3.2以降で導入)。詳しくは
      a(href="getting-started-2.html/#css-customizing") CSSのカスタマイズ
      | を参照。
    p.my-2 具体的なサポート状況はオフィシャルページを参照すること。
    ul
      li ⇒ 
        +extLink("https://getbootstrap.com/docs/4.2/getting-started/browsers-devices/#mobile-devices") モバイル機器
      li ⇒ 
        +extLink("https://getbootstrap.com/docs/4.2/getting-started/browsers-devices/#desktop-browsers") デスクトップブラウザ

    h2.mt-5#javascript
      +extLink("https://getbootstrap.com/docs/4.2/getting-started/javascript/") JavaScript
    p.my-2 BootstrapはCSSだけでは実現できない動的処理にJavaScriptを用いている(jQueryプラグインとして書かれているため「JavaScriptプラグイン」と呼ばれている)。基本的な利用(設定)方法は
      a(href="#intro-javascript") JavaScript読み込み
      | を参照。
    p.my-2 また(バンドル前の)ソースコードはES2016(ES6)形式で、Webpackなどの各種モジュールバンドル対応ツールからモジュール単位で利用することもできる。詳しくは
      a(href="#contents-source-code") Bootstrapソースコード
      | を参照(モジュール形式の詳細は 
      a.btn.btn-outline-info.btn-sm(href="#javascript-modules-button") JavaScriptモジュール形式について
      |  ボタンで表示)。
    p.my-2 BootstrapのJavaScriptプラグインは読み込み時に自動的に初期設定を実行する(通常は自分でコードを書かなくてよい)。ただし次のコンポーネントは自分で簡単な初期化用JavaScriptコードを記述する必要がある(リンク先にコード例あり)。
    ul
      li
        a(href="components-11.html/#popovers") ポップオーバー
      li
        a(href="components-12.html/#toasts") トースト
      li
        a(href="components-12.html/#tooltips") ツールチップ
    h4.mt-3#javascript-data-attributes
      +extLink("https://getbootstrap.com/docs/4.2/getting-started/javascript/#data-attributes") data属性
    p.my-2 動作の設定には 
      +extLink("https://developer.mozilla.org/ja/docs/Web/HTML/Global_attributes/data-*") カスタムデータ属性 
        code data-*
      |  が用いられる。HTMLタグ中に 
      code data-
      |  で始まるBootstrap用の属性を記述し、JavaScriptの初期化時にこの設定が読み込まれ処理される。
    h4.mt-3#javascript-data-attributes
      +extLink("https://getbootstrap.com/docs/4.2/getting-started/javascript/#programmatic-api") API呼び出し
    p.my-2 BootstrapのJavaScript APIはjQueryプラグイン仕様に基づいており、jQueryで対象要素を抽出してメソッド呼び出しすることにより機能する。以下は
      a(href="components-8.html/#modal") モーダル
      | のAPI呼び出し例。使用できるオプション一覧は公式ドキュメントの 
      +extLink("https://getbootstrap.com/docs/4.2/components/modal/#options") Options
      | 、メソッドに渡すコマンド(文字列)一覧は 
      +extLink("https://getbootstrap.com/docs/4.2/components/modal/#methods") Methods
      |  を参照。
    pre.mt-3.p-2.border.bg-light
      code
        | // 例1: デフォルト設定でインターフェースを生成(自動的に行われるため通常不要)
        | $('#my-modal').modal();
        | 
        | // 例2: オプションを設定(属性を用いてdata-keyboard="false"と設定するのと同様)
        | // (公式ドキュメントのoptionsを参照)
        | $('#my-modal').modal({ keyboard: false });
        | 
        | // 例3: コマンドを実行
        | // (公式ドキュメントのmethodsを参照)
        | $('#my-modal').modal('show');
    h4.mt-3#javascript-events
      +extLink("https://getbootstrap.com/docs/4.2/getting-started/javascript/#events") イベント
    p.my-2 Bootstrap JavaScript APIでは各コンポーネントの特定タイミングにカスタムイベントが設定してある。イベント名はjQueryの名前空間を用いてドット区切りで次のように表現されている。
    ul
      li
        code {イベント}.bs.{コンポーネント}
        ul
          li
            code {イベント}
            |  - コンポーネント別のイベント名 (例: 
            code show
            |  )
          li
            code bs
            |  - Bootstrapのカスタムイベントであることを表す
          li
            code {コンポーネント}
            |  - jQueryにプラグイン登録しているコンポーネント名 (例: 
            code modal
            |  )
    p.my-2 次も
      a(href="components-8.html/#modal") モーダル
      | へのイベント設定例。イベント一覧は公式ドキュメントの 
      +extLink("https://getbootstrap.com/docs/4.2/components/modal/#events") Events
      |  を参照すること。
    pre.mt-3.p-2.border.bg-light
      code
        | // イベント"show.bs.modal"はモーダル表示開始時に発生する
        | $('#my-modal').on('show.bs.modal', function(event) {
        |   // まだモーダルは表示していないので
        |   // ここでモーダルに表示する内容を設定できる
        | });
    p.my-2 より詳しい実例は本チュートリアルの 
      a(href="components-8.html/#varying-modal-content") 起動時のコンテント更新
      |  を参照(実際に動作しているコード例あり)。
    h4.mt-3#javascript-jquery-plugin jQueryプラグイン
    h5.mt-2#javascript-no-conflict
      +extLink("https://getbootstrap.com/docs/4.2/getting-started/javascript/#no-conflict") .noConflict()
    p.my-2 先に示した通り、BootstrapのJavaScript APIはjQueryプラグインとして実装されており、具体的には 
      code $.fn.button
      |  のように小文字のコンポーネント名でそのまま登録されている(他に 
      code alert
      | , 
      code carousel
      | , 
      code collapse
      | , etc.)。他のjQueryプラグインと名前が衝突する場合に対応するため 
      code .noConflict()
      |  を用意している。
    pre.mt-3.p-2.border.bg-light
      code
        | // Bootstrapが設定する前の$.fn.buttonに戻してから、
        | // Bootstrapのbuttonプラグインを返す
        | var bootstrapButton = $.fn.button.noConflict();
        | // bootstrapButtonという(衝突しない)名前で再登録
        | $.fn.bootstrapBtn = bootstrapButton;
    h5.mt-2#javascript-default-settings
      +extLink("https://getbootstrap.com/docs/4.2/getting-started/javascript/#default-settings") デフォルト設定の変更
    p.my-2 各プラグインのデフォルト設定は 
      code $.fn.{プラグイン名}.Constructor.Default
      |  オブジェクトに設定されており、必要に応じて次のように変更できる。
    pre.mt-3.p-2.border.bg-light
      code
        | // 例: モーダルのキーボード操作のデフォルト動作をOFFにする
        | $.fn.modal.Constructor.Default.keyboard = false;

    +breadcrumbLevel1("Getting started (1): スタートアップ/利用法/コンテンツ/ブラウザ/JavaScript")
